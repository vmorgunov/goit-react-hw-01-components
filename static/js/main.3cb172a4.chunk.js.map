{"version":3,"sources":["components/SocialProfile/SocialProfile.styled.jsx","components/SocialProfile/SocialProfile.jsx","components/Statistic/Statistics.styled.jsx","components/Statistic/Statistics.jsx","components/Statistic/StatisticsList.jsx","components/FriendList/FriendList.styled.jsx","components/FriendList/FriendListItem.jsx","components/FriendList/FriendList.jsx","components/Transactions/TransactionHistory.styled.jsx","components/Transactions/Transaction.jsx","components/Transactions/TransactionHistory.jsx","App.jsx","index.js"],"names":["Container","styled","div","Desripction","Avatar","img","Name","p","Tag","Location","Stats","ul","Label","span","Quantity","Item","li","Profile","avatar","name","tag","location","stats","src","alt","followers","views","likes","Section","section","Title","h2","StatisticList","Percentage","Statistics","label","percentage","color","Math","floor","random","toString","style","backgroundColor","StatisticsList","map","id","Online","Offline","List","FriendListItem","isOnline","FriendList","friends","propType","PropTypes","string","isRequired","status","bool","Table","table","TableHeader","th","TableData","td","TableBody","tbody","Transiction","type","amount","currency","TransactionHistory","items","App","user","StatisticalData","transactions","propTape","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.3cb172a4.chunk.js","sourcesContent":["import styled from '@emotion/styled';\n\nexport const Container = styled.div`\n  margin-top: 20px;\n  width: 300px;\n  height: 280px;\n`;\n\nexport const Desripction = styled.div`\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n`;\n\nexport const Avatar = styled.img`\n  width: 100px;\n  border-radius: 50%;\n  margin-bottom: 10px;\n`;\n\nexport const Name = styled.p`\n  font-weight: 500;\n  font-size: 20px;\n  margin-bottom: 10px;\n`;\n\nexport const Tag = styled.p`\n  margin-bottom: 10px;\n  color: var(--accent-color);\n`;\n\nexport const Location = styled.p`\n  margin-bottom: 10px;\n  color: var(--accent-color);\n`;\n\nexport const Stats = styled.ul`\n  display: flex;\n  justify-content: space-around;\n`;\n\nexport const Label = styled.span`\n  display: flex;\n  color: var(--accent-color);\n  margin-bottom: 10px;\n`;\n\nexport const Quantity = styled.span`\n  display: flex;\n  justify-content: center;\n`;\n\nexport const Item = styled.li``;\n","import PropTypes from 'prop-types';\nimport {\n  Name,\n  Container,\n  Desripction,\n  Avatar,\n  Tag,\n  Location,\n  Stats,\n  Label,\n  Quantity,\n  Item,\n} from './SocialProfile.styled';\n\nexport default function Profile({ avatar, name, tag, location, stats }) {\n  return (\n    <Container>\n      <Desripction>\n        <Avatar src={avatar} alt=\"Аватар пользователя\" />\n        <Name>{name}</Name>\n        <Tag>{tag}</Tag>\n        <Location>{location}</Location>\n      </Desripction>\n\n      <Stats>\n        <Item>\n          <Label>Followers</Label>\n          <Quantity>{stats.followers}</Quantity>\n        </Item>\n        <Item>\n          <Label>Views</Label>\n          <Quantity>{stats.views}</Quantity>\n        </Item>\n        <Item>\n          <Label>Likes</Label>\n          <Quantity>{stats.likes}</Quantity>\n        </Item>\n      </Stats>\n    </Container>\n  );\n}\n\nProfile.propTypes = {\n  name: PropTypes.string.isRequired,\n  tag: PropTypes.string.isRequired,\n  location: PropTypes.string.isRequired,\n  avatar: PropTypes.string.isRequired,\n  stats: PropTypes.object.isRequired,\n};\n","import styled from '@emotion/styled';\n\nexport const Section = styled.section`\n  width: 331px;\n  margin-left: 20px;\n  background-color: var(--secondary-accent-color);\n`;\n\nexport const Title = styled.h2`\n  text-align: center;\n  padding: 10px;\n`;\n\nexport const StatisticList = styled.ul`\n  display: flex;\n`;\n\nexport const Label = styled.span`\n  color: var(--white-color);\n  display: flex;\n  align-items: center;\n  justify-content: center;\n`;\n\nexport const Percentage = styled.span`\n  font-size: 30px;\n  color: var(--white-color);\n`;\n\nexport const Item = styled.li`\n  padding: 5px;\n`;\n","import { Label, Percentage, Item } from './Statistics.styled';\nexport default function Statistics({ label, percentage }) {\n  function getRandomHexColor() {\n    return `#${Math.floor(Math.random() * 16777215).toString(16)}`;\n  }\n  const color = getRandomHexColor();\n  return (\n    <Item style={{ backgroundColor: color }}>\n      <Label>{label}</Label>\n      <Percentage>{percentage}%</Percentage>\n    </Item>\n  );\n}\n","import Statistics from './Statistics';\nimport PropTypes from 'prop-types';\nimport { Section, Title, StatisticList } from './Statistics.styled';\n\nexport default function StatisticsList({ stats }) {\n  return (\n    <Section>\n      <Title>Upload stats</Title>\n\n      <StatisticList>\n        {stats.map(({ id, label, percentage }) => (\n          <Statistics key={id} label={label} percentage={percentage} />\n        ))}\n      </StatisticList>\n    </Section>\n  );\n}\n\nStatisticsList.propTypes = {\n  stats: PropTypes.arrayOf(\n    PropTypes.exact({\n      id: PropTypes.string.isRequired,\n      label: PropTypes.string.isRequired,\n      percentage: PropTypes.number.isRequired,\n    }),\n  ),\n};\n","import styled from '@emotion/styled';\n\nexport const Online = styled.span`\n  background-color: var(--green-color);\n  width: 15px;\n  height: 15px;\n  border-radius: 50%;\n  margin-right: 10px;\n`;\n\nexport const Offline = styled.span`\n  background-color: var(--red-color);\n  width: 15px;\n  height: 15px;\n  border-radius: 50%;\n  margin-right: 10px;\n`;\n\nexport const Avatar = styled.img`\n  width: 48px;\n  margin-right: 10px;\n`;\n\nexport const Name = styled.p``;\n\nexport const Item = styled.li`\n  display: flex;\n  width: 200px;\n  border: #000 1px solid;\n  align-items: center;\n  padding: 5px 20px;\n  margin-bottom: 10px;\n  box-shadow: 0px 3px 15px -1px #000000;\n`;\n\nexport const List = styled.ul`\n  margin-top: 20px;\n  margin-left: 20px;\n`;\n","import PropTypes from 'prop-types';\nimport { Online, Offline, Avatar, Name, Item } from './FriendList.styled';\n\nexport default function FriendListItem({ avatar, name, isOnline }) {\n  return (\n    <Item>\n      {isOnline ? <Online /> : <Offline />}\n      <Avatar src={avatar} alt={name} />\n      <Name>{name}</Name>\n    </Item>\n  );\n}\n\nFriendListItem.propType = {\n  avatar: PropTypes.string.isRequired,\n  name: PropTypes.string.isRequired,\n  status: PropTypes.bool.isRequired,\n};\n","import PropTypes from 'prop-types';\nimport FriendListItem from './FriendListItem';\nimport { List } from './FriendList.styled';\n\nexport default function FriendList({ friends }) {\n  return (\n    <List>\n      {friends.map(({ id, name, isOnline, avatar }) => (\n        <FriendListItem\n          key={id}\n          name={name}\n          isOnline={isOnline}\n          avatar={avatar}\n        />\n      ))}\n    </List>\n  );\n}\n\nFriendList.propTypes = {\n  friends: PropTypes.arrayOf(PropTypes.exact),\n};\n","import styled from '@emotion/styled';\n\nexport const Table = styled.table`\n  margin-top: 30px;\n  margin-left: 20px;\n  border: 1px solid var(--border-color);\n  text-align: left;\n  border-collapse: collapse;\n  width: 30%;\n`;\n\nexport const TableHeader = styled.th`\n  background-color: var(--table-header);\n  border: 1px solid var(--border-color);\n  text-align: left;\n  padding: 15px;\n  color: var(--white-color);\n`;\n\nexport const TableData = styled.td`\n  border: 1px solid var(--border-color);\n  text-align: left;\n  padding: 15px;\n  text-transform: uppercase;\n`;\n\nexport const TableBody = styled.tbody`\n  tr:nth-of-type(even) {\n    background-color: var(--table-body);\n  }\n`;\n","import { TableData } from './TransactionHistory.styled';\nexport default function Transiction({ type, amount, currency }) {\n  return (\n    <tr>\n      <TableData>{type}</TableData>\n      <TableData>{amount}</TableData>\n      <TableData>{currency}</TableData>\n    </tr>\n  );\n}\n","import PropTypes from 'prop-types';\nimport { Table, TableHeader, TableBody } from './TransactionHistory.styled';\nimport Transiction from './Transaction';\n\nexport default function TransactionHistory({ items }) {\n  return (\n    <Table>\n      <thead>\n        <tr>\n          <TableHeader>Type</TableHeader>\n          <TableHeader>Amount</TableHeader>\n          <TableHeader>Currency</TableHeader>\n        </tr>\n      </thead>\n      <TableBody>\n        {items.map(({ id, type, amount, currency }) => (\n          <Transiction\n            key={id}\n            type={type}\n            amount={amount}\n            currency={currency}\n          />\n        ))}\n      </TableBody>\n    </Table>\n  );\n}\n\nTransactionHistory.propTape = {\n  type: PropTypes.string.isRequired,\n  amount: PropTypes.string.isRequired,\n  currency: PropTypes.string.isRequired,\n};\n","import user from './components/SocialProfile/User.json';\nimport StatisticalData from './components/Statistic/StatisticalData.json';\nimport friends from './components/FriendList/Friends.json';\nimport transactions from './components/Transactions/transactions.json';\n\nimport Profile from './components/SocialProfile/SocialProfile';\nimport StatisticsItem from './components/Statistic/StatisticsList';\nimport FriendsList from './components/FriendList/FriendList';\nimport TransactionHistory from './components/Transactions/TransactionHistory';\n\nexport default function App() {\n  return (\n    <div>\n      <Profile\n        key={user.tag}\n        name={user.name}\n        tag={user.tag}\n        location={user.location}\n        avatar={user.avatar}\n        stats={user.stats}\n      />\n      <StatisticsItem stats={StatisticalData} />\n      <FriendsList friends={friends} />\n      <TransactionHistory items={transactions} />;\n    </div>\n  );\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App.jsx';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}